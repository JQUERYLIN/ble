plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
}

group='com.github.JQUERYLIN'

android {
    compileSdk 32

    defaultConfig {
        minSdk 23
        targetSdk 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    task createJar(type: Jar) {
        archiveBaseName = 'mylibrary' // JAR 文件名
        archiveVersion = '1.0.0'     // 版本号

        // 包含编译后的 Kotlin 类文件
        from android.sourceSets.main.java.srcDirs
        include '**/*.class'

        // 排除 Android 特定的文件（如 R.class）
        exclude '**/R.class'
        exclude '**/R$*.class'
        exclude '**/BuildConfig.class'
    }

// 将任务绑定到构建过程
    afterEvaluate {
        assembleRelease.finalizedBy(createJar)
    }

    task makeJar(type: Copy) {
        //删除存在的
        delete 'build/libs/jarsdk.jar'
        //设置拷贝的文件
        // from('build/intermediates/bundles/release/')
        from('build/intermediates/aar_main_jar/debug/')
        //打进jar包后的文件目录
        into('build/libs/')
        //将classes.jar放入build/libs/目录下
        //include ,exclude参数来设置过滤
        //（我们只关心classes.jar这个文件）
        include('classes.jar')
        //重命名
        rename ('classes.jar', 'jarsdk.jar')
    }
    makeJar.dependsOn(build)
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    api 'org.greenrobot:eventbus:3.2.0'
    api 'com.blankj:utilcodex:1.30.6'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'com.github.JQUERYLIN'
            artifactId = 'ble'
            version = 'v1.0.0.4'
        }
    }
    // 替换为你的仓库地址
    repositories {
        maven {
            url = "https://github.com/JQUERYLIN/ble.git"
        }
    }
}



//ext {
//
//// 从Github上clone下来的项目的本地地址
//
//    GITHUB_REPO_PATH ="D:\\GitHub\\git\\bl\\YWX"
//
//    PUBLISH_GROUP_ID ='com.JQUERYLIN' //这个不要跟着我写 这是github 的id
//
//    PUBLISH_ARTIFACT_ID ='ble'//这个是刚才在github创建的仓库名字
//
//    PUBLISH_VERSION ='1.0.0'//版本号
//
//}
